name: Build And Test
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: ðŸ”¨ Build
        run: cargo build --release --verbose
        working-directory: backend
      - name: ðŸ§ª Test
        run: cargo test
        working-directory: backend
      - name: tar files to keep permissions
        run: tar -cvf backend.tar backend
      - uses: actions/upload-artifact@v2
        with:
          name: backend
          path: backend.tar

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
          cache-dependency-path: "frontend/yarn.lock"
      - name: ðŸ”¨ Build
        run: |
          yarn install --frozen-lockfile
          yarn lint
          yarn build
        working-directory: frontend
      - name: ðŸ§ª Test
        run: yarn test
        working-directory: frontend
      - uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: frontend/build

  deploy-development:
    if: github.event_name != 'push'
    environment:
      name: development
      url: https://svante3.mit.edu
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: test-folder
      - name: deploy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
          source: "test-folder"
          target: "~/builds/"

  deploy-production:
    if: github.event_name == 'push'
    environment:
      name: production
      url: https://est.mit.edu
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: test-folder
      - name: deploy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
          source: "test-folder"
          target: "~/builds/"
